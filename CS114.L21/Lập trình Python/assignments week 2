{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Tìm số gần nhất.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyN1UWc7AEWPphIdwxNjdgXU",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/lphuong304/CS114.L21/blob/assignments-week-2/CS114.L21/L%E1%BA%ADp%20tr%C3%ACnh%20Python/assignments%20week%202\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I57J59wLeiM6",
        "outputId": "23080982-afa1-44ee-a24c-c26bf2556a69"
      },
      "source": [
        "import array as a\r\n",
        "import bisect as bis\r\n",
        "\r\n",
        "n = int(input())\r\n",
        "\r\n",
        "arr = a.array('l', map(int, input().split()))\r\n",
        "\r\n",
        "k, x = map(int, input().split())\r\n",
        "\r\n",
        "high = bis.bisect(arr, x)\r\n",
        "low = high - 1\r\n",
        "\r\n",
        "near_x = a.array('l')\r\n",
        "for i in range(0, k):\r\n",
        "    if (high >= len(arr)):\r\n",
        "        near_x.append(arr[low])\r\n",
        "        low -= 1\r\n",
        "    elif (low < 0):\r\n",
        "        near_x.append(arr[high])\r\n",
        "        high += 1\r\n",
        "    else:\r\n",
        "        if (arr[high] - x < x - arr[low]):\r\n",
        "            near_x.append(arr[high])\r\n",
        "            high += 1\r\n",
        "        else:\r\n",
        "            near_x.append(arr[low])\r\n",
        "            low -= 1\r\n",
        "\r\n",
        "print(*sorted(near_x), sep=' ')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "16\n",
            "228 230 232 232 233 233 235 237 239 239 239 241 243 245 246 247\n",
            "5 398\n",
            "241 243 245 246 247\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}